@use '../../styles/animations.scss';
@use '../../styles/a11y.scss';
@use '../../styles/font.scss';
@use '../../styles/mq.scss';
@use '../../styles/transitions.scss';

.header {
	background-color: var(--bgCol);
	min-height: 100vh;
	color: var(--fontCol);
	border-bottom: var(--borderWidth) solid var(--separatorCol);
	display: grid;
	align-content: center;
	overflow: hidden;
	padding: 0 var(--sideSpacing);
	position: relative;
	z-index: 40;

	@include animations.fadeIn;

	&.navIsOpen {
		z-index: 10;
	}
}

.heading {
	width: 100%;
	height: 100%;
	padding: 0;
	margin: 0;
	display: flex;
	flex-direction: column;
	align-items: flex-start;
}

.headingText,
.headingText span {
	margin: 0;
	padding: 0;
	display: inline-block;
	line-height: 1;
	@include font.weight(600);
	text-transform: uppercase;
	@include font.style(oblique);
}

.outlines {
	color: var(--accentCol);
	@supports (-webkit-text-stroke-width: 1px) {
		color: transparent;
		-webkit-text-stroke-width: 0.025em;
		-webkit-text-stroke-color: var(--accentCol);

		// Override global color transition. The `color` property
		// is irrelevant for outlined text
		transition: -webkit-text-stroke-color 300ms ease-in-out;

		@include transitions.whenBlocked {
			transition: none;
		}
	}
}

.scrollDownLabel {
	@include a11y.visuallyHidden;
}

$arrowSize: 2rem;

.scrollDownLink {
	position: absolute;
	bottom: 4rem;
	left: calc(50% - #{$arrowSize / 2});
	display: flex;
	align-items: center;
	justify-content: center;
	color: var(--textCol);
	cursor: pointer;

	@include mq.wideScreen {
		bottom: 2.5rem;
	}

	&:visited,
	&:hover,
	&:focus,
	&:active {
		color: var(--textCol);
	}

	animation: move 2s ease-in-out 2s 2 forwards;

	@keyframes move {
		0% {
			transform: translateY(0);
		}
		17% {
			transform: translateY(-1.2rem);
		}
		19% {
			transform: translateY(-1.2rem);
		}
		36% {
			transform: translateY(0);
		}
	}
}

.arrowDown {
	display: block;
	width: $arrowSize;
	height: $arrowSize;
}
